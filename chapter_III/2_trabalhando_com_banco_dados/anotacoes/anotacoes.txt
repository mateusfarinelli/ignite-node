### Trabalhando com Banco de Dados ###

- Quando trabalhamos com banco de dados em uma aplicação, temos 3 possibilidades:
  - Utilização do drive nativo do banco/linguagem;
  - Utilização de um query builder (exemplo o knex.js);
  - Utilização de um ORM (Sequelize e TypeORM por exemplo);
  - Nesse projeto iremos utilizar o TypeORM;
    - Link oficial do TypeORM: https://typeorm.io/#/

- Vamos então iniciar a instalação e configuração do TypeORM em nosso projeto;
  - Inicialmente instalamos as depêndencias do typeorm e do reflect-metadata;
    - "npm install typeorm reflect-metadata";
  - Segundo a instrutora não precisamos instalar os tipos "@types" (entretanto resalvo que
    a instalação dos tipos está descrita na documentação da biblioteca);
  - Passamos então a instalação do driver do banco que iremos utilizar:
      - "npm install pg";
  - Posteiromente no arquivo "tsconfig.json" precisamos habilitar (como true), as
    propriedades:
      - experimentalDecorators;
      - emitDecoratorMetadata;
  - Então criamos o diretório "database/" em "src/" e dentro dele criamos o "index.ts",
    dessa forma iremos iniciar nossa conexão da maneira mais simples que é utilizando
    o método createConnection do TypeORM;
  - Dentro do "server.ts" apenas importamos o database/index.ts;
  - Na raiz do projeto criamos o arquivo "ormconfig.json" passando algumas propriedades,
    conforme instrução da documentação para o tipo de extensão selecionada;
  - Agora como precisamos criar o banco, bem como usuario e senha, iremos prosseguir para
    a próxima aula e verificar como criar um container para o banco;

  - Agora veremos como criar um container para o banco de dados;
  - No nosso arquivo docker-compose.yml vamos adicionar o nosso banco de dados
    - Para isso logo acima do app (já que o app depende do banco) adicionamos o serviço
      database_ignite, recebendo como parametro para a propriedade "image" o nome da imagem e
      demais configurações;
    - Essa parte foi um pouco trabalhosa por conta de alguns erros, ou comportamentos inesperados
      por isso é muito importante também seguir esse documento:
        - https://www.notion.so/Refatora-o-Docker-com-TypeORM-4500fc0d075349ac9b97d670e734d41b;
  
  - Nessa aula vamos ver como fazer o gerenciamento do nosso banco de dados através do ORM, ou seja,
    como criar, editar e remover tabelas e etc;
    - Com isso vamos estudar um pouco o conceito de "migrations". Migrations são como uma forma de
      versionamento do nosso banco de dados, ou seja, criamos as tabelas dentro da propria aplicação;
    - Deixando as informações das tabelas mais clara e disponivel para todos os contribuintes do
      projeto;
  

